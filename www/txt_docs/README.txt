1) Архитектура (взаимодействие файлов):

Клиент (корневая папка): 
- guestBook_main.html это главный файл программы, который будет подключаться
  при интеграции гостевой книги. Запускает formInterface.js при нажатии кнопки
  и запускает searchInterface.js при вводе текста в input.
- formInterface.js это скрипт интерфейса формы добавления записи в
  гостевую книгу.
- searchInterface.js это скрипт интерфейса поиска записей пользователей.
- ajaxRequests.js это скрипт содержащий ajax запросы к server.
- css/style.css - это таблица стилей для клиентской части.

Сервер (корневая папка/server):
- server_guestBook.php это принимающий запросы скрипт, обрабатывающий
  его и в случае успешной обработки переадресует на
  скрипты папки requestExecution для исполнения указанного запроса, а
  в случае безуспешной обработки переадресует на 
  скрипты папки errors. 
  Так же файл принимает на себя ответ от исполнительного
  файла, будь то файлы requestExecution или errors, и отправляет его
  ответом на клиентсткую часть.
- папка dataBase это папка содержащую в себе экспортированну из
  phpmyadmin базу данных
- папка errors
	  error.php это файл содержащий себе методы ответов при той
	или иной возникшей ошибки. 
- папка requestExecution
	  request_addMessageUser.php это файл исполняющий запрос на добавление
	записи пользователя в гостевую книгу. Так же этот файл записывает 
	пользователя который оставил комментарий в базу данных если в ней
	его еще не было. Ответом этого файла является подтверждение успешного 
	завершения действий файла.
	  request_getDataMessage.php это файл исполняющий запрос выборки данных
	из базы данных сообщений пользователей гостевой книги и их отправки
	в качестве ответа.

2) Архитектура (взаимодействие баз данных):	
- data_message
	cols: id_message, id_user, homepage, textMessage, createAt_message(время создания)
- data_users
	cols: token_user, name_user, email_user, createAt_user
- tegs_#idMessage#(генерирующаяся)
	cols: id_message, textTag, authorTag

primary key:
	data_message.id_user -> data_users.token_user (один ко многим)
	(связь генерируемая)tegs_#idMessage#.id_message -> data_message.id_message (многие ко многим)